#!/bin/sh

printf "^B4^^C15^^v^ "
# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status (üîå for plugged up, üîã for discharging on battery, etc.).


# Loop through all attached batteries and format the info
for battery in /sys/class/power_supply/BAT?*; do
	# If non-first battery, print a space separator.
	[ -n "${capacity+x}" ] && printf " "
	# Sets up the status and capacity
	case "$(cat "$battery/status" 2>&1)" in
		"Full") status="Û∞ö•" ;;
		"Discharging") status="" ;;
		"Charging") status="Û∞ö•" ;;
		"Not charging") status="Û∞ö•" ;;
		"Unknown") status="Û∞ì¶" ;;
		*) exit 1 ;;
	esac
    capacity="$(cat "$battery/capacity" 2>&1)"
    # Will make a warn variable if discharging and low
    [ "$status" = "" ] && [ "$capacity" -le 25 ] && warn="ÔÅ±"
    bl=20 # bl = batterylength
    bh=8 # bh = batteryheight *yet to be implemented
    padding=2 # padding for each side, so if padding=2 there will be 2 pixels of padding on BOTH sides
    fill="$(echo "($bl - 1) * ($capacity / 100)" | bc -l | grep -o "...." | head -n 1)"

    # Prints the info
    if [[ $capacity -ge 20 ]]; then
        batteryicon="^C4^^r0,0,$((bl + (padding * 2))),50^^C15^^r$padding,10,2,4^^r$((padding + 2)),7,$bl,10^^C0^^r$((padding + 3)),8,$(($bl - 4)),8^^C15^^r$(echo "($bl - $fill) + $(($padding + 2))" | bc -l),8,$(echo "$bl - ($bl - $fill)" | bc -l),8^^t^^f$(($bl + ($padding * 2)))^"
    else
        batteryicon="^C4^^r0,0,$((bl + (padding * 2))),50^^c#dd2222^^r$padding,10,2,4^^r$((padding + 2)),7,$bl,10^^C0^^r$((padding + 3)),8,$(($bl - 4)),8^^C15^^r$(echo "($bl - $fill) + $(($padding + 2))" | bc -l),8,$(echo "$bl - ($bl - $fill)" | bc -l),8^^t^^f$(($bl + ($padding * 2)))^"
    fi
        
    #batteryicon="^C4^^r0,0,$((bl + (padding * 2))),50^^C15^^r$padding,10,2,4^^r$((padding + 2)),7,$(($bl)),10^^C0^^r$((padding + 3)),8,$(($bl - 4)),8^^C15^^r$(echo "($bl - $fill) + $(($padding + 2))" | bc -l),8,$(echo "$bl - 2 - ($bl - $fill)" | bc -l),8^^t^^f$(($bl - 5))^"
    printf "%s%s%s"  "$batteryicon" "$status"  "$warn"; unset warn
done && printf "\\n"

case $BLOCK_BUTTON in
    3) notify-send "üîã Battery module: $capacity%" "ÔÉß: discharging
        ÔÅû: not charging
        ÔÜ∏: stagnant charge
        Óïõ: charging
        ÔâÄ: charged
        ÔÅ±: battery very low!
        - Scroll to change adjust xbacklight." ;;
    4) xbacklight -inc 10 ;;
    5) xbacklight -dec 10 ;;
    6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

